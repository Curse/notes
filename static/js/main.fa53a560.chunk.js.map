{"version":3,"sources":["sheet-bg.png","utils/history.tsx","auth/action-types.tsx","auth/reducer.js","notes/action-types.tsx","notes/reducer.tsx","auth/selectors.tsx","notes/actions.tsx","notes/saga.tsx","config/root-saga.tsx","config/configure-store.tsx","auth/Login.tsx","auth/ForceAuth.tsx","notes/selectors.tsx","notes/note-search.tsx","user-bar/user-bar.tsx","editable-div/simple-render.tsx","editable-div/defaultStyles.js","editable-div/editable-div.tsx","editable-div/index.tsx","config/theme.tsx","index.tsx","config/root-reducer.tsx","auth/actions.tsx"],"names":["module","exports","__webpack_require__","p","history","createBrowserHistory","basename","SET_USER","initialState","user","authReducer","state","arguments","length","undefined","action","type","types","Object","objectSpread","payload","SET_NOTE","START_SYNC","STOP_SYNC","home","this","notesReducer","_ref","id","label","content","defineProperty","snakeCase","handleSetNote","getUser","createSelector","auth","setNote","_ref$id","_ref$persist","persist","createFirebaseChannel","listenForNotes","persistNote","sagaFilter","notesSaga","concat","toConsumableArray","values","notesTypes","authTypes","database","regenerator_default","a","wrap","_context","prev","next","firebase","firestore","abrupt","eventChannel","emiter","listener","collection","onSnapshot","snapshot","docChanges","forEach","change","doc","data","off","stop","_marked","firebaseChannel","_context2","select","authSelectors","sent","call","take","put","actions","t0","console","log","_marked2","_ref2","_context3","add","owner","uid","get","then","docSnapshot","ref","update","_marked3","_ref3","currentSync","_context4","fork","cancel","_marked4","_context5","takeEvery","_marked5","rootSaga","sagas","all","map","saga","spawn","mark","_callee","root_saga_marked","sagaMiddleware","createSagaMiddleware","uiConfig","signInFlow","signInOptions","GoogleAuthProvider","PROVIDER_ID","callbacks","signInSuccessWithAuthResult","Wrap","styled","div","_templateObject","theme","primaryDark","LoginWindow","_templateObject2","Login","props","react_default","createElement","StyledFirebaseAuth_default","firebaseAuth","connect","selectors","children","auth_Login","getState","notes","getLabels","keys","sort","getSuggestableNotes","reduce","acc","noteLabel","display","getPaths","labels","specificPaths","process","specificLabels","includes","path","note_search_templateObject","customStyles","menu","provided","marginTop","notesSelectors","paths","dispatch","bindActionCreators","navigate","push","search","React","useRef","options","value","useEffect","callback","evt","shiftKey","ctrlKey","key","current","focus","document","addEventListener","removeEventListener","note_search_Wrap","react_select_browser_esm","onChange","option","className","placeholder","styles","TopBar","user_bar_templateObject","button","user_bar_templateObject2","black","rgba","primary","img","_templateObject3","userSelectors","_ref4","note_search","SimpleRender","text","labelRegex","split","i","startsWith","match","react_router_dom","contentEditable","to","slice","onFocus","e","stopPropagation","defaultStyles","control","highlighter","overflow","input","margin","&singleLine","width","padding","border","&multiLine","minHeight","outline","suggestions","list","backgroundColor","fontSize","item","borderBottom","&focused","editable_div_templateObject","ContentWrap","editable_div_templateObject2","SaveButton","editable_div_templateObject3","RenderedContent","_templateObject4","NoteLabel","h2","_templateObject5","EditableDiv","ownProps","note","name","setContent","_ref2$id","_ref2$content","_React$useState","useState","_React$useState2","slicedToArray","editing","setEditing","_React$useState3","_React$useState4","contentState","setContentState","editableDiv","persistEdit","newContent","editable_div_Wrap","react_mentions_esm","target","style","onKeyDown","onClick","inputRef","trigger","displayTransform","suppressContentEditableWarning","simple_render","primaryLight","highlight","store","middlewares","routerMiddleware","enhancers","applyMiddleware","apply","composeEnhancers","compose","createStore","injectedReducers","combineReducers","router","connectRouter","createReducer","run","configureStore","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","onAuthStateChanged","setUser","GlobalStyle","createGlobalStyle","src_templateObject","bgi","src_templateObject2","NotesBar","src_templateObject3","NotesHeader","src_templateObject4","Home","src_editable_div","Page","params","pageId","rootElement","getElementById","render","open","setOpen","styled_components_browser_esm","es","src_Wrap","auth_ForceAuth","index_es","icon","faAngleDoubleDown","faAngleDoubleUp","user_bar","esm","react_router","exact","component"],"mappings":"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","file":"static/js/main.fa53a560.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sheet-bg.c15c3d90.png\";","import { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory({basename: '/notes'});\nexport default history;","export const SET_USER = 'auth:SET_USER'","import * as types from './action-types'\n\nconst initialState = {\n    user: null\n}\n\nfunction authReducer(state = initialState, action) {\n    switch (action.type) {\n        case types.SET_USER: {\n            return {\n                ...state,\n                user: action.payload.user,\n            }\n        }\n        default: {\n            return state\n        }\n    }\n}\n\nexport default authReducer","export const SET_NOTE = 'notes:SET_NOTE'\nexport const START_SYNC = 'notes:START_SYNC'\nexport const STOP_SYNC = 'notes:STOP_SYNC'","import * as types from './action-types'\nimport snakeCase from 'lodash/snakeCase'\n\nconst initialState = {\n    home: `This is a simple note taking app.\n\n    Prepend any world with @ to create a new page, like @this.\n\n    The entire page is editable, apart from the Home link at the top.`,\n    this: `Isn't this easy?`\n};\n\nfunction handleSetNote(state, {id, label, content}) {\n    return {\n        ...state,\n        [snakeCase(label)]: {id, content},\n    }\n}\n\n\nfunction notesReducer(state = initialState, action) {\n    switch (action.type) {\n        case (types.SET_NOTE): {\n            return handleSetNote(state, action.payload)\n        }\n        default: {\n            return state;\n        }\n    }\n}\n\n  export default notesReducer","import { createSelector } from 'reselect'\n\nexport const getState = state => state.auth\nexport const getUser = createSelector([getState], (state) => state.user )\n","import * as types from './action-types'\n\nexport const setNote = ({label, content, id=null, persist=true}) => ({\n    type: types.SET_NOTE,\n    payload: {\n        id, label, content, persist\n    }\n})","import {eventChannel} from 'redux-saga'\nimport {take, put, call, select, takeEvery, fork, cancel} from 'redux-saga/effects'\nimport firebase from 'firebase'\nimport * as authSelectors from '../auth/selectors'\nimport * as notesTypes from './action-types'\nimport * as authTypes from '../auth/action-types'\nimport * as actions from './actions'\n\nconst types = [...Object.values(notesTypes), authTypes.SET_USER]\n\nfunction* createFirebaseChannel(user) {\n    const database = firebase.firestore()\n\n    return eventChannel(emiter => {\n        const listener = database.collection(\"notes\").onSnapshot(snapshot => {\n          snapshot.docChanges().forEach(change => emiter({id: change.doc.id, data: change.doc.data()}))\n        })\n  \n        return () => {\n          //@ts-ignore\n          listener.off();\n        }\n    })\n}\n\nfunction* listenForNotes() {\n    const user = yield select(authSelectors.getUser)\n    if (!user) {\n        return\n    }\n    const firebaseChannel = yield call(createFirebaseChannel, user) \n\n    while (true) {\n        try {\n            const { id, data } = yield take(firebaseChannel);\n            yield put(actions.setNote({id, ...data, persist: false}));\n        } catch(err) {\n            console.log('firebase error', err)\n        }\n    }\n}\n\nfunction* persistNote({id, label, content}) {\n    const user = yield select(authSelectors.getUser)\n    if (!user) {\n        return\n    }\n    const database = firebase.firestore()\n    if (!id) {\n        yield database.collection(\"notes\").add({\n            owner: user.uid,\n            label,\n            content,\n        })\n    } else {\n        database.collection('notes').doc(id).get().then(docSnapshot => {\n            docSnapshot.ref.update({label, content})\n        })\n    }\n    \n}\n\nfunction* sagaFilter({type, payload}) {\n    switch (type) {\n        case authTypes.SET_USER:\n            const currentSync = yield fork(listenForNotes)\n            yield take(notesTypes.STOP_SYNC)\n            yield cancel(currentSync)\n            break\n        case notesTypes.SET_NOTE:\n            if (payload.persist) {\n                yield call(persistNote, payload)\n            }\n            break\n    }\n  }\n  \n\nexport default function* notesSaga() {\n    yield takeEvery(types, sagaFilter)\n}","import {spawn, call, all} from 'redux-saga/effects'\nimport notesSaga from '../notes/saga'\n\nexport default function* rootSaga () {\n    const sagas = [\n        notesSaga,\n    ];\n  \n    yield all(sagas.map(saga =>\n      spawn(function* () {\n        while (true) {\n          try {\n            yield call(saga)\n            break\n          } catch (e) {\n            console.log(e)\n          }\n        }\n      }))\n    );\n  }","/**\n * Create the store with dynamic reducers\n */\n\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { routerMiddleware } from 'connected-react-router';\nimport createSagaMiddleware from 'redux-saga';\nimport createReducer from './root-reducer';\nimport rootSaga from './root-saga'\n\nconst sagaMiddleware = createSagaMiddleware();\n\nexport default function configureStore(initialState = {}, history) {\n  // Create the store with two middlewares\n  // 2. routerMiddleware: Syncs the location/URL path to the state\n  const middlewares = [sagaMiddleware, routerMiddleware(history)];\n\n  const enhancers = [applyMiddleware(...middlewares)];\n\n  // If Redux DevTools Extension is installed use it, otherwise use Redux compose\n  /* eslint-disable no-underscore-dangle */\n  // @ts-ignore\n  const composeEnhancers = process.env.NODE_ENV !== 'production' && typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    // @ts-ignore\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({ \n      // TODO Try to remove when `react-router-redux` is out of beta, LOCATION_CHANGE should not be fired more than once after hot reloading\n      // Prevent recomputing reducers for `replaceReducer`\n      shouldHotReload: false\n    })\n    : compose;\n  /* eslint-enable */\n\n  const store = createStore(createReducer(), initialState, composeEnhancers(...enhancers));\n  sagaMiddleware.run(rootSaga)\n\n  // Extensions\n  // @ts-ignore\n  // store.injectedReducers = {}; // Reducer registry\n  // store.injectedSagas = {}; // Saga registry\n\n  // /* istanbul ignore next */\n  // if (module.hot) {\n  //   module.hot.accept('./reducers', () => {\n  //     store.replaceReducer(createReducer(store.injectedReducers));\n  //     store.dispatch({ type: '@@REDUCER_INJECTED' });\n  //   });\n  // }\n\n  return store;\n}","import React from \"react\";\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport firebase from 'firebase';\nimport styled from 'styled-components'\n\n// Configure FirebaseUI.\nexport const uiConfig = {\n  // Popup signin flow rather than redirect flow.\n  signInFlow: 'popup',\n  // Redirect to /signedIn after sign in is successful. Alternatively you can provide a callbacks.signInSuccess function.\n  // signInSuccessUrl: '/signedIn',\n  // We will display Google and Facebook as auth providers.\n  signInOptions: [\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n    // firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n    // firebase.auth.TwitterAuthProvider.PROVIDER_ID,\n    // firebase.auth.GithubAuthProvider.PROVIDER_ID,\n  ],\n  callbacks: {\n    signInSuccessWithAuthResult: () => false\n  }\n};\n\nconst Wrap = styled.div`\n  width: 100%;\n  min-height: 100vh;\n  background-color: ${({theme})=> theme.primaryDark};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst LoginWindow = styled.div`\n  width: 100%;\n  max-width: 400px;\n  margin-left: 10px;\n  margin-right: 10px;\n  background-color: white;\n  border-radius: 4px;\n  padding: 10px;\n`\n\nexport function Login(props: any) {\n  return (\n  <Wrap>\n    <LoginWindow>\n      <h1>Notes App</h1>\n      <p>Please sign-in:</p>\n      <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()} />\n    </LoginWindow>\n  </Wrap>);\n}\n\nexport default Login","import React from 'react'\nimport {connect} from 'react-redux'\nimport Login from './Login'\nimport * as selectors from './selectors'\n\nconst ForceAuth = ({user, children}) => {\n    if (user) {\n        return children\n    }\n    return <Login/>\n}\n\nconst mapStateToProps = (state) => ({\n    user: selectors.getUser(state)\n})\n\nexport default connect(mapStateToProps)(ForceAuth)","import {createSelector} from 'reselect'\nimport snakeCase from 'lodash/snakeCase'\n\nexport const getState = state => state.notes\n\nexport const getLabels = createSelector([getState], state => Object.keys(state).sort())\n\nexport const getSuggestableNotes = createSelector([getState], state => {\n    return Object.keys(state).reduce((acc, noteLabel) => {\n        return [...acc, {\n            id: state[noteLabel].id,\n            display: noteLabel\n        }]\n    }, [])\n})\n\nexport const getPaths = createSelector([getLabels], labels => {\n    const specificPaths = {'home': `${process.env.PUBLIC_URL}/`}\n    const specificLabels = Object.keys(specificPaths)\n    return labels.map(label => {\n        if (specificLabels.includes(label)) {\n            return {label: label, path: specificPaths[label]}\n        }\n        return {label: label, path: `${process.env.PUBLIC_URL}/p/${label}/`}\n    })\n})\n\nexport const makeGetNoteByLabel = label => {\n    return createSelector([getState], (state) => state[snakeCase(label)])\n}","import React from 'react'\nimport Select from 'react-select'\nimport {connect} from 'react-redux'\nimport {bindActionCreators} from 'redux'\nimport * as notesSelectors from './selectors'\nimport styled from 'styled-components'\nimport { push } from 'connected-react-router'\n\nconst Wrap = styled.div`\n    position: relative;\n    width: 100%;\n\n    .react-autosuggest__container {\n        background-color: red;\n        position: relative;\n    }\n`\n\nconst customStyles = {\n    menu: (provided) => ({\n        ...provided,\n        marginTop: 0,\n    })\n}\n\n\nconst NoteSearch = ({paths, navigate}) => {\n    const search = React.useRef(null)\n    const options = paths.map(path => ({value: path.path, label: `@${path.label}`}))\n\n    React.useEffect(() => {\n        const callback = (evt) => {\n          if (evt.shiftKey && evt.ctrlKey && evt.key === 'F') {\n            search.current.focus()\n          }\n        }\n        document.addEventListener('keydown', callback)\n        return () => {\n          document.removeEventListener('keydown', callback)\n        }\n      }, [])\n\n    return (\n        <Wrap>\n            <Select\n                ref={search}\n                value=''\n                onChange={(option) => navigate(option.value)} \n                options={options}\n                className=\"bbbababb\"\n                placeholder=\"Jump to a note stub\"\n                styles={customStyles}\n            />\n        </Wrap>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    labels: notesSelectors.getLabels(state),\n    paths: notesSelectors.getPaths(state),\n})\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n    navigate: (label) => push(label)\n}, dispatch)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteSearch)","import React from 'react'\nimport { connect } from \"react-redux\";\nimport * as userSelectors from '../auth/selectors'\nimport firebase from 'firebase'\nimport styled from 'styled-components'\nimport {rgba} from 'polished'\nimport NoteSearch from '../notes/note-search'\n\nconst TopBar = styled.div`\n    width: 100%;\n    display: flex;\n    padding: 5px;\n    flex-direction: row;\n`\n\nconst LogoutButton = styled.button`\n    display: flex;\n    align-items: center;\n    border-radius: 3px;\n    border: none;\n    cursor: pointer;\n    margin-left: 4px;\n    padding: 4px;\n    transition: color 80ms, background-color 80ms;\n    color: ${({theme}) => theme.black};\n    background-color: ${({theme}) => rgba(theme.primary, 0)}; \n\n    &:hover,\n    &:focus,\n    &:active {\n        color: white;\n        background-color: ${({theme}) => rgba(theme.primary, 1)};        \n    }\n`\n\nconst Avatar = styled.img`\n    width: 30px;\n    height: 30px;\n    margin-right: 10px;\n    border-radius: 50%;\n`\n\n\nconst UserBar = ({user}) => (\n    <TopBar>\n        <NoteSearch/>\n        {/* <LogoutButton onClick={() => firebase.auth().signOut()}>\n            <Avatar src={user.photoURL}/>\n            <div>Logout</div>\n        </LogoutButton> */}\n    </TopBar>\n)\n\nconst mapStateToProps = (state) => ({\n    user: userSelectors.getUser(state)\n})\n\nexport default connect(mapStateToProps)(UserBar)","\nimport React from 'react'\nimport {Link} from 'react-router-dom'\n\nconst SimpleRender = ({text}) => {\n    const labelRegex = /@\\[?(\\w+)]?/\n    const components = text.split(/(@\\[?\\w+]?\\(?\\w+\\)?)/).map((a: string, i: number) => {\n        if (a.startsWith(\"@\")) {\n            a = `@${a.match(labelRegex)[1]}`\n        }\n        return a.startsWith(\"@\") ? (\n        // @ts-ignore\n        <Link\n            contentEditable={false}\n            to={`${process.env.PUBLIC_URL}/p/` + a.slice(1)}\n            onFocus={e => e.stopPropagation()}\n            key={i}\n        >\n            {a}\n        </Link>\n        ) : (\n        a\n        )\n    }\n    );\n    return components;\n};\n\nexport default SimpleRender","export default {\n  control: {\n    // backgroundColor: '#fff',\n\n    // fontSize: 14,\n    // fontWeight: 'normal',\n  },\n\n  highlighter: {\n    overflow: 'hidden',\n  },\n\n  input: {\n    margin: 0,\n  },\n\n  '&singleLine': {\n    control: {\n      display: 'inline-block',\n\n      width: 130,\n    },\n\n    highlighter: {\n      padding: 1,\n      border: '2px inset transparent',\n    },\n\n    input: {\n      padding: 1,\n\n      border: '2px inset',\n    },\n  },\n\n  '&multiLine': {\n    control: {\n      // fontFamily: 'monospace',\n      // border: '1px solid silver',\n    },\n\n    highlighter: {\n      padding: 9,\n    },\n\n    input: {\n      padding: 0,\n      minHeight: 63,\n      outline: 0,\n      border: 0,\n    },\n  },\n\n  suggestions: {\n    list: {\n      backgroundColor: 'white',\n      border: '1px solid rgba(0,0,0,0.15)',\n      fontSize: 14,\n    },\n\n    item: {\n      padding: '5px 15px',\n      borderBottom: '1px solid rgba(0,0,0,0.15)',\n\n      '&focused': {\n        backgroundColor: '#cee4e5',\n      },\n    },\n  },\n}","import React from 'react'\nimport {bindActionCreators} from 'redux'\nimport {connect} from 'react-redux'\nimport {getSuggestableNotes, makeGetNoteByLabel} from '../notes/selectors'\nimport {setNote} from '../notes/actions'\nimport SimpleRender from './simple-render'\nimport styled from 'styled-components'\nimport { MentionsInput, Mention } from 'react-mentions'\nimport defaultStyles from './defaultStyles'\n\ninterface EditingStyleChangeFunction {\n    editing: boolean\n}\n\nconst Wrap = styled.div`\n    padding: 0 5px;\n    \n    .editor {\n      opacity: 0;\n    }\n    &.editing .editor{\n      opacity: 1;\n    }\n`\n\nconst ContentWrap = styled.div`\n    outline: none;\n    position: relative;\n    width: 100%;\n    font-size: 14px;\n    width: 100%;\n    \n    \n`\n\nconst SaveButton = styled.button`\n  position:absolute;\n  top: 0;\n  right: 0;\n  opacity: 0.5;\n  &:hover,\n  &:focus {\n    opacity: 1;\n  }\n`\n\nconst RenderedContent = styled.div`\n  position: absolute;\n  left: 0;\n  top: 0;\n  right: 0;\n  pointer-events: none;\n  \n  a {\n    pointer-events: all;\n  }\n`\n\nconst NoteLabel = styled.h2`\n    margin: 10px 0 0 0;\n    font-family: 'Roboto Condensed', sans-serif;\n    font-size: 16px;\n    font-weight: 700;\n`\n\nconst defaultContent = \"Type here...\"\n\n\nconst EditableDiv = ({\n    name,\n    note,\n    suggestions,\n    setContent,\n}) => {\n    const {\n        id = null,\n        content = defaultContent,\n    } = note || {}\n    const [editing, setEditing] = React.useState(false)\n    const [contentState, setContentState] = React.useState(content)\n    const editableDiv = React.useRef(null)\n\n\n    const resetFocus = () => {\n        // noteStart.current.focus()\n    }\n\n    React.useEffect(()=>{\n        setContentState(content)\n    },[content])\n\n    const persistEdit = () => {\n        const newContent = contentState\n        setEditing(false)\n        if (newContent !== content) {\n            setContent(id, newContent)\n        }\n    }\n\n    const handleBlur = e => {\n        persistEdit()\n    };\n\n    const handleKeyDown = e => {\n        if (e.key === 'Escape') {\n            setEditing(false)\n            resetFocus()\n            return false\n        }\n        if (e.ctrlKey && e.key === 'Enter') {\n            persistEdit()\n            resetFocus()\n            return false\n        }\n    }\n\n    const handleEditStart = e => {\n        setEditing(true)\n    }\n\n    return (\n        <Wrap className={editing ? 'editing': ''}>\n            <NoteLabel>{name}</NoteLabel>\n            <ContentWrap>\n                <MentionsInput\n                    key={'editable-content'}\n                    value={contentState}\n                    onChange={(e)=>setContentState(e.target.value)}\n                    style={defaultStyles}\n                    onKeyDown={handleKeyDown}\n                    onClick={handleEditStart}\n                    inputRef={editableDiv}\n                    className={'editor'}\n                >\n                  <Mention\n                    trigger=\"@\"\n                    data={suggestions}\n                    displayTransform={(id, display) => `@${display}`}\n                  />\n                </MentionsInput>\n                {!editing && <RenderedContent>\n                    <div\n                        contentEditable\n                        suppressContentEditableWarning={true}\n                        >\n                        <SimpleRender text={content}/>\n                    </div>\n                </RenderedContent>}\n                {editing && <SaveButton onClick={()=>persistEdit()}>Save</SaveButton>}\n            </ContentWrap>\n        </Wrap>\n    );\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    const getContentByLabel = makeGetNoteByLabel(ownProps.name)\n    return {\n        note: getContentByLabel(state),\n        suggestions: getSuggestableNotes(state),\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => bindActionCreators({\n    setContent: (id, content) => setNote({label: ownProps.name, id, content}),\n}, dispatch)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditableDiv)","import EditableDiv from './editable-div'\n\nexport default EditableDiv","export const black = '#212121'\nexport const primary = \"#1976d2\"\nexport const primaryLight = \"#63a4ff\"\nexport const primaryDark = \"#004ba0\"\nexport const highlight = \"#b59e54\"","import { Provider } from 'react-redux'\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { render } from \"react-dom\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { ConnectedRouter } from 'connected-react-router'\nimport configureStore from './config/configure-store'\nimport history from './utils/history'\nimport firebase from 'firebase';\nimport * as _ from \"lodash\";\nimport { Login } from \"./auth/Login\";\nimport { setUser } from './auth/actions'\nimport ForceAuth from './auth/ForceAuth'\nimport UserBar from './user-bar/user-bar'\nimport styled, {ThemeProvider} from 'styled-components'\nimport EditableDiv from './editable-div'\nimport * as theme from './config/theme'\nimport { createGlobalStyle } from \"styled-components\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAngleDoubleUp } from '@fortawesome/free-solid-svg-icons/faAngleDoubleUp'\nimport { faAngleDoubleDown } from '@fortawesome/free-solid-svg-icons/faAngleDoubleDown'\nimport bgi from './sheet-bg.png'\n\nimport \"normalize.css\";\n\nconst store = configureStore({}, history)\n\n// Configure Firebase.\nvar firebaseConfig = {\n    apiKey: \"AIzaSyBR2o33lqBdQsoHD4X1uppI93k2fVDeQsw\",\n    authDomain: \"curse-notes.firebaseapp.com\",\n    databaseURL: \"https://curse-notes.firebaseio.com\",\n    projectId: \"curse-notes\",\n    storageBucket: \"curse-notes.appspot.com\",\n    messagingSenderId: \"715608577655\",\n    appId: \"1:715608577655:web:b80968c875c4d3a1601872\"\n  };\nfirebase.initializeApp(firebaseConfig);\nfirebase.auth().onAuthStateChanged( user => store.dispatch(setUser(user)))\n\n\nconst GlobalStyle = createGlobalStyle`\n  @import url(\"https://fonts.googleapis.com/css?family=Roboto|Roboto+Condensed&display=swap\");\n\n  * {\n    box-sizing: border-box;\n  }\n\n  body {\n    background-position: center top;\n    @media (min-width: 800px) {\n      background-image: url(${bgi});\n    }\n  }\n  \n`\n\nconst Wrap = styled.div`\n  font-family: 'Roboto', sans-serif;\n`\n\nconst NotesBar = styled.div`\n  background-color: #fff;\n  min-height: 100vh;\n  \n  @media (min-width: 800px) {\n    min-height: auto;\n    position: fixed;\n    bottom: 0;\n    right: 30px;\n    \n    border-color: ${({theme})=>theme.highlight};\n    border-style: solid;\n    border-width: 3px;\n    border-bottom: 0;\n    border-top-left-radius: 5px;\n    border-top-right-radius: 5px;\n    box-shadow: 0 1px 4px rgba(0, 0, 0, .3);\n    height: 31px;\n    width: 180px;\n      &.open {\n        height: 400px;\n        width: 450px;\n      }\n  }\n  \n`\n\n\nconst NotesHeader = styled.div`\n  background-color: ${({theme})=>theme.highlight};\n  font-family: 'Roboto Condensed', sans-serif;\n  color: white;\n  padding: 5px 10px 5px;\n  display: flex;\n  justify-content: space-between;\n  cursor: pointer;\n`\n\nconst App = () => {\n  const [open, setOpen] = React.useState(true)\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Provider store={store}>\n        <Wrap>\n          <GlobalStyle/>\n          <ForceAuth>\n            <NotesBar className={open ? 'open' : ''}>\n              <NotesHeader onClick={()=>setOpen(!open)}>Road to Redemption<FontAwesomeIcon icon={open ? faAngleDoubleDown: faAngleDoubleUp} /></NotesHeader>\n              <UserBar/>\n              <ConnectedRouter history={history}>\n                <Route exact={true} path={`${process.env.PUBLIC_URL}/`} component={Home} />\n                <Route path={`${process.env.PUBLIC_URL}/p/:pageId`} component={Page} />\n              </ConnectedRouter>\n            </NotesBar>\n          </ForceAuth>\n        </Wrap>\n      </Provider>\n    </ThemeProvider>\n  )\n};\n\nconst Home = ({ match }) => <EditableDiv name=\"home\"/>\n\nconst Page = ({ match }) => <EditableDiv name={match.params.pageId}/>;\n\nconst rootElement = document.getElementById(\"root\");\nrender(<App />, rootElement);\n","/**\n * Combine all reducers in this file and export the combined reducers.\n */\n\nimport { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\n\nimport history from '../utils/history';\nimport auth from '../auth/reducer'\nimport notes from '../notes/reducer'\n\n/**\n * Merges the main reducer with the router state and dynamically injected reducers\n */\nexport default function createReducer(injectedReducers = {}) {\n  const rootReducer = combineReducers({\n    router: connectRouter(history),\n    auth,\n    notes,\n    ...injectedReducers,\n  });\n\n  return rootReducer;\n}","import * as types from \"./action-types\";\n\nexport function setUser(user: object) {\n    return {\n        type: types.SET_USER,\n        payload: {\n            user,\n        }\n    }\n}"],"sourceRoot":""}