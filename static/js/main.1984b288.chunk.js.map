{"version":3,"sources":["utils/history.tsx","auth/action-types.tsx","auth/reducer.js","notes/action-types.tsx","notes/reducer.tsx","user-status/action-types.tsx","user-status/reducer.tsx","auth/selectors.tsx","notes/actions.tsx","notes/saga.tsx","user-status/actions.tsx","user-status/saga.tsx","config/root-saga.tsx","config/configure-store.tsx","auth/Login.tsx","auth/ForceAuth.tsx","notes/selectors.tsx","notes/note-search.tsx","user-bar/user-bar.tsx","editable-div/simple-render.tsx","editable-div/defaultStyles.js","editable-div/editable-div.tsx","editable-div/index.tsx","config/theme.tsx","user-status/selectors.tsx","user-status/user-badge.tsx","user-status/user-status.tsx","index.tsx","config/root-reducer.tsx","auth/actions.tsx"],"names":["history","createBrowserHistory","basename","SET_USER","initialState","user","authReducer","state","arguments","length","undefined","action","type","types","Object","objectSpread","payload","SET_NOTE","START_SYNC","STOP_SYNC","notesReducer","_ref","id","label","content","defineProperty","snakeCase","handleSetNote","SET_STATUS","REMOVE_STATUS","userStatusReducer","_ref$user","userId","location","avatar","displayName","handleSetUserStatus","_ref2","keys","reduce","acc","handleRemoveUserStatus","getUser","createSelector","auth","setNote","_ref$id","_ref$persist","persist","createFirebaseChannel","listenForNotes","persistNote","sagaFilter","notesSaga","concat","toConsumableArray","values","notesTypes","authTypes","database","regenerator_default","a","wrap","_context","prev","next","firebase","firestore","abrupt","eventChannel","emiter","listener","collection","onSnapshot","snapshot","docChanges","forEach","change","doc","data","off","stop","_marked","firebaseChannel","_context2","select","authSelectors","sent","call","take","put","actions","t0","console","log","_marked2","_context3","add","get","then","docSnapshot","ref","update","_marked3","_ref3","currentSync","_context4","fork","cancel","_marked4","_context5","takeEvery","_marked5","setUserStatus","removeUserStatus","listenForStatusChanges","persistOwnStatus","userStatusSaga","userStatusTypes","LOCATION_CHANGE","where","saga_marked","uid","t1","saga_marked2","existingSnapshot","existingId","getLocation","photoURL","status","pathname","saga_marked4","saga_marked5","_context6","_marked6","rootSaga","sagas","all","map","saga","spawn","mark","_callee","root_saga_marked","sagaMiddleware","createSagaMiddleware","uiConfig","signInFlow","signInOptions","GoogleAuthProvider","PROVIDER_ID","callbacks","signInSuccessWithAuthResult","Wrap","styled","div","_templateObject","theme","primaryDark","LoginWindow","_templateObject2","Login","props","react_default","createElement","StyledFirebaseAuth_default","firebaseAuth","connect","selectors","children","auth_Login","getState","notes","getLabels","sort","getSuggestableNotes","noteLabel","display","getPaths","labels","specificPaths","home","process","specificLabels","includes","path","note_search_templateObject","customStyles","menu","provided","marginTop","notesSelectors","paths","dispatch","bindActionCreators","navigate","push","createNoteFromTerm","search","React","useRef","options","value","_React$useState","useState","_React$useState2","slicedToArray","searchInput","setSearchInput","useEffect","callback","evt","shiftKey","ctrlKey","key","current","focus","document","addEventListener","removeEventListener","note_search_Wrap","react_select_browser_esm","inputValue","onChange","option","placeholder","styles","noOptionsMessage","onKeyDown","term","target","find","preventDefault","blur","onInputChange","e","TopBar","user_bar_templateObject","button","user_bar_templateObject2","black","rgba","primary","img","_templateObject3","userSelectors","_ref4","note_search","SimpleRender","text","labelRegex","split","i","startsWith","match","react_router_dom","contentEditable","to","slice","onFocus","stopPropagation","defaultStyles","control","highlighter","overflow","input","margin","&singleLine","width","padding","border","&multiLine","minHeight","outline","suggestions","list","backgroundColor","fontSize","item","borderBottom","&focused","editable_div_templateObject","ContentWrap","editable_div_templateObject2","SaveButton","editable_div_templateObject3","RenderedContent","_templateObject4","NoteLabel","h2","_templateObject5","EditableDiv","ownProps","note","name","setContent","_ref2$id","_ref2$content","editing","setEditing","_React$useState3","_React$useState4","contentState","setContentState","editableDiv","persistEdit","newContent","editable_div_Wrap","className","react_mentions_esm","style","onClick","inputRef","trigger","displayTransform","suppressContentEditableWarning","simple_render","primaryLight","highlight","userStatus","getUserIds","users","Outer","user_badge_templateObject","samePage","Label","user_badge_templateObject2","_ref5","user_badge_templateObject3","Avatar","user_badge_templateObject4","currentLocation","_ref6","replace","title","user_badge_Wrap","user_badge_Avatar","src","user_status_templateObject","StyledBadge","UserBadge","user_status_templateObject2","userIds","userStatusSelectors","user_status_Wrap","store","middlewares","routerMiddleware","enhancers","applyMiddleware","apply","composeEnhancers","compose","createStore","injectedReducers","combineReducers","router","connectRouter","createReducer","run","configureStore","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","onAuthStateChanged","setUser","GlobalStyle","createGlobalStyle","src_templateObject","src_templateObject2","NotesBar","src_templateObject3","StyledUserStatus","UserStatus","src_templateObject4","NotesHeader","src_templateObject5","NoteContainer","_templateObject6","Home","src_editable_div","Page","params","pageId","rootElement","getElementById","render","open","setOpen","styled_components_browser_esm","es","esm","src_Wrap","auth_ForceAuth","index_es","icon","faAngleDoubleDown","faAngleDoubleUp","user_bar","react_router","exact","component"],"mappings":"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","file":"static/js/main.1984b288.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory({basename: '/notes'});\nexport default history;","export const SET_USER = 'auth:SET_USER'","import * as types from './action-types'\n\nconst initialState = {\n    user: null\n}\n\nfunction authReducer(state = initialState, action) {\n    switch (action.type) {\n        case types.SET_USER: {\n            return {\n                ...state,\n                user: action.payload.user,\n            }\n        }\n        default: {\n            return state\n        }\n    }\n}\n\nexport default authReducer","export const SET_NOTE = 'notes:SET_NOTE'\nexport const START_SYNC = 'notes:START_SYNC'\nexport const STOP_SYNC = 'notes:STOP_SYNC'","import * as types from './action-types'\nimport snakeCase from 'lodash/snakeCase'\n\nconst initialState = {\n};\n\nfunction handleSetNote(state, {id, label, content}) {\n    return {\n        ...state,\n        [snakeCase(label)]: {id, content},\n    }\n}\n\n\nfunction notesReducer(state = initialState, action) {\n    switch (action.type) {\n        case (types.SET_NOTE): {\n            return handleSetNote(state, action.payload)\n        }\n        default: {\n            return state;\n        }\n    }\n}\n\n  export default notesReducer","export const SET_STATUS = 'USER_STATUS:SET_STATUS'\nexport const REMOVE_STATUS = 'USER_STATUS:REMOVE_STATUS'","import * as types from './action-types'\n\nconst initialState = {\n};\n\nfunction handleSetUserStatus(state, {user: {id, userId, location, avatar, displayName}}) {\n    return {\n        ...state,\n        [userId]: {userId, location, avatar, displayName},\n    }\n}\n\nfunction handleRemoveUserStatus(state, { id }) {\n    return Object.keys(state).reduce((acc, userId) => {\n        if (userId !== id) {\n            acc[userId] = state[userId]\n        }\n        return acc\n    }, {})\n}\n\n\nfunction userStatusReducer(state = initialState, action) {\n    switch (action.type) {\n        case (types.SET_STATUS): {\n            return handleSetUserStatus(state, action.payload)\n        }\n        case (types.REMOVE_STATUS): {\n            return handleRemoveUserStatus(state, action.payload)\n        }\n        default: {\n            return state;\n        }\n    }\n}\n\n  export default userStatusReducer","import { createSelector } from 'reselect'\n\nexport const getState = state => state.auth\nexport const getUser = createSelector([getState], (state) => state.user )\n","import * as types from './action-types'\n\nexport const setNote = ({label, content, id=null, persist=true}) => ({\n    type: types.SET_NOTE,\n    payload: {\n        id, label, content, persist\n    }\n})","import {eventChannel} from 'redux-saga'\nimport {take, put, call, select, takeEvery, fork, cancel} from 'redux-saga/effects'\nimport firebase from 'firebase'\nimport * as authSelectors from '../auth/selectors'\nimport * as notesTypes from './action-types'\nimport * as authTypes from '../auth/action-types'\nimport * as actions from './actions'\n\nconst types = [...Object.values(notesTypes), authTypes.SET_USER]\n\nfunction* createFirebaseChannel(user) {\n    const database = firebase.firestore()\n\n    return eventChannel(emiter => {\n        const listener = database.collection(\"notes\").onSnapshot(snapshot => {\n          snapshot.docChanges().forEach(change => emiter({id: change.doc.id, data: change.doc.data()}))\n        })\n  \n        return () => {\n          //@ts-ignore\n          listener.off();\n        }\n    })\n}\n\nfunction* listenForNotes() {\n    const user = yield select(authSelectors.getUser)\n    if (!user) {\n        return\n    }\n    const firebaseChannel = yield call(createFirebaseChannel, user) \n\n    while (true) {\n        try {\n            const { id, data } = yield take(firebaseChannel);\n            yield put(actions.setNote({id, ...data, persist: false}));\n        } catch(err) {\n            console.log('firebase error', err)\n        }\n    }\n}\n\nfunction* persistNote({id, label, content}) {\n    const user = yield select(authSelectors.getUser)\n    if (!user) {\n        return\n    }\n    const database = firebase.firestore()\n    if (!id) {\n        yield database.collection(\"notes\").add({\n            label,\n            content,\n        })\n    } else {\n        database.collection('notes').doc(id).get().then(docSnapshot => {\n            docSnapshot.ref.update({label, content})\n        })\n    }\n    \n}\n\nfunction* sagaFilter({type, payload}) {\n    switch (type) {\n        case authTypes.SET_USER:\n            const currentSync = yield fork(listenForNotes)\n            yield take(notesTypes.STOP_SYNC)\n            yield cancel(currentSync)\n            break\n        case notesTypes.SET_NOTE:\n            if (payload.persist) {\n                yield call(persistNote, payload)\n            }\n            break\n    }\n  }\n  \n\nexport default function* notesSaga() {\n    yield takeEvery(types, sagaFilter)\n}","import * as types from './action-types'\n\nexport const setUserStatus = (user, persist) => ({\n    type: types.SET_STATUS,\n    payload: {\n        user,\n        persist\n    }\n})\n\n\nexport const removeUserStatus = (userId) => ({\n    type: types.REMOVE_STATUS,\n    payload: {\n        userId,\n    }\n})","import {eventChannel} from 'redux-saga'\nimport {take, put, call, select, takeEvery, fork, cancel} from 'redux-saga/effects'\nimport firebase from 'firebase'\nimport * as authSelectors from '../auth/selectors'\nimport * as userStatusTypes from './action-types'\nimport * as authTypes from '../auth/action-types'\nimport * as actions from './actions'\nimport {LOCATION_CHANGE, getLocation} from 'connected-react-router'\nconst types = [...Object.values(userStatusTypes), authTypes.SET_USER, LOCATION_CHANGE]\n\nfunction* createFirebaseChannel(user) {\n    const database = firebase.firestore()\n\n    return eventChannel(emiter => {\n        const listener = database.collection(\"user-status\").where('status', '==', 'active').onSnapshot(snapshot => {\n          snapshot.docChanges().forEach(change => {\n              emiter({id: change.doc.id, data: change.doc.data(), action: change.type})\n          })\n        })\n\n        return () => {\n          //@ts-ignore\n          listener.off();\n        }\n    })\n}\n\nfunction* listenForStatusChanges() {\n    const user = yield select(authSelectors.getUser)\n    if (!user) {\n        return\n    }\n    const firebaseChannel = yield call(createFirebaseChannel, user)\n\n    while (true) {\n        try {\n            const { id, data, action } = yield take(firebaseChannel);\n            switch (action) {\n                case 'remove':\n                    yield put(actions.removeUserStatus(id));\n                default:\n                    if (data.userId !== user.uid) {\n                        yield put(actions.setUserStatus({id, ...data},false));\n                    }\n            }\n        } catch(err) {\n            console.log('firebase error', err)\n        }\n    }\n}\n\nfunction* persistNote({id, label, content}) {\n    const user = yield select(authSelectors.getUser)\n    if (!user) {\n        return\n    }\n    const database = firebase.firestore()\n    if (!id) {\n        yield database.collection(\"notes\").add({\n            owner: user.uid,\n            label,\n            content,\n        })\n    } else {\n        database.collection('notes').doc(id).get().then(docSnapshot => {\n            docSnapshot.ref.update({label, content})\n        })\n    }\n\n}\n\nfunction* persistOwnStatus() {\n    const user = yield select(authSelectors.getUser)\n    const location = yield select(getLocation)\n    const database = firebase.firestore()\n    if (!user) {\n        return\n    }\n    const existingSnapshot = yield database.collection(\"user-status\")\n        .where('userId', '==', user.uid).get()\n\n    let existingId = null\n    existingSnapshot.forEach((doc) => existingId=doc.id)\n\n    if (!existingId) {\n        yield database.collection(\"user-status\").add({\n            userId: user.uid,\n            avatar: user.photoURL,\n            displayName: user.displayName,\n            status: 'active',\n            location: location.pathname,\n        })\n    } else {\n        database.collection('user-status').doc(existingId).get().then(docSnapshot => {\n            docSnapshot.ref.update({status: 'active', location: location.pathname})\n        })\n    }\n}\n\nfunction* sagaFilter({type, payload}) {\n    switch (type) {\n        case authTypes.SET_USER:\n            const currentSync = yield fork(listenForStatusChanges)\n            break\n        case LOCATION_CHANGE:\n            yield fork(persistOwnStatus)\n            break\n    }\n}\n\n\nexport default function* userStatusSaga() {\n    yield takeEvery(types, sagaFilter)\n}","import {spawn, call, all} from 'redux-saga/effects'\nimport notesSaga from '../notes/saga'\nimport userStatusSaga from '../user-status/saga'\n\nexport default function* rootSaga () {\n    const sagas = [\n        notesSaga,\n        userStatusSaga,\n    ];\n  \n    yield all(sagas.map(saga =>\n      spawn(function* () {\n        while (true) {\n          try {\n            yield call(saga)\n            break\n          } catch (e) {\n            console.log(e)\n          }\n        }\n      }))\n    );\n  }","/**\n * Create the store with dynamic reducers\n */\n\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { routerMiddleware } from 'connected-react-router';\nimport createSagaMiddleware from 'redux-saga';\nimport createReducer from './root-reducer';\nimport rootSaga from './root-saga'\n\nconst sagaMiddleware = createSagaMiddleware();\n\nexport default function configureStore(initialState = {}, history) {\n  // Create the store with two middlewares\n  // 2. routerMiddleware: Syncs the location/URL path to the state\n  const middlewares = [sagaMiddleware, routerMiddleware(history)];\n\n  const enhancers = [applyMiddleware(...middlewares)];\n\n  // If Redux DevTools Extension is installed use it, otherwise use Redux compose\n  /* eslint-disable no-underscore-dangle */\n  // @ts-ignore\n  const composeEnhancers = process.env.NODE_ENV !== 'production' && typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    // @ts-ignore\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({ \n      // TODO Try to remove when `react-router-redux` is out of beta, LOCATION_CHANGE should not be fired more than once after hot reloading\n      // Prevent recomputing reducers for `replaceReducer`\n      shouldHotReload: false\n    })\n    : compose;\n  /* eslint-enable */\n\n  const store = createStore(createReducer(), initialState, composeEnhancers(...enhancers));\n  sagaMiddleware.run(rootSaga)\n\n  // Extensions\n  // @ts-ignore\n  // store.injectedReducers = {}; // Reducer registry\n  // store.injectedSagas = {}; // Saga registry\n\n  // /* istanbul ignore next */\n  // if (module.hot) {\n  //   module.hot.accept('./reducers', () => {\n  //     store.replaceReducer(createReducer(store.injectedReducers));\n  //     store.dispatch({ type: '@@REDUCER_INJECTED' });\n  //   });\n  // }\n\n  return store;\n}","import React from \"react\";\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport firebase from 'firebase';\nimport styled from 'styled-components'\n\n// Configure FirebaseUI.\nexport const uiConfig = {\n  // Popup signin flow rather than redirect flow.\n  signInFlow: 'popup',\n  // Redirect to /signedIn after sign in is successful. Alternatively you can provide a callbacks.signInSuccess function.\n  // signInSuccessUrl: '/signedIn',\n  // We will display Google and Facebook as auth providers.\n  signInOptions: [\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n    // firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n    // firebase.auth.TwitterAuthProvider.PROVIDER_ID,\n    // firebase.auth.GithubAuthProvider.PROVIDER_ID,\n  ],\n  callbacks: {\n    signInSuccessWithAuthResult: () => false\n  }\n};\n\nconst Wrap = styled.div`\n  width: 100%;\n  min-height: 100vh;\n  background-color: ${({theme})=> theme.primaryDark};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst LoginWindow = styled.div`\n  width: 100%;\n  max-width: 400px;\n  margin-left: 10px;\n  margin-right: 10px;\n  background-color: white;\n  border-radius: 4px;\n  padding: 10px;\n`\n\nexport function Login(props: any) {\n  return (\n  <Wrap>\n    <LoginWindow>\n      <h1>Notes App</h1>\n      <p>Please sign-in:</p>\n      <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()} />\n    </LoginWindow>\n  </Wrap>);\n}\n\nexport default Login","import React from 'react'\nimport {connect} from 'react-redux'\nimport Login from './Login'\nimport * as selectors from './selectors'\n\nconst ForceAuth = ({user, children}) => {\n    if (user) {\n        return children\n    }\n    return <Login/>\n}\n\nconst mapStateToProps = (state) => ({\n    user: selectors.getUser(state)\n})\n\nexport default connect(mapStateToProps)(ForceAuth)","import {createSelector} from 'reselect'\nimport snakeCase from 'lodash/snakeCase'\n\nexport const getState = state => state.notes\n\nexport const getLabels = createSelector([getState], state => Object.keys(state).sort())\n\nexport const getSuggestableNotes = createSelector([getState], state => {\n    return Object.keys(state).reduce((acc, noteLabel) => {\n        return [...acc, {\n            id: state[noteLabel].id,\n            display: noteLabel\n        }]\n    }, [])\n})\n\nexport const getPaths = createSelector([getLabels], labels => {\n    const specificPaths = {'home': `${process.env.PUBLIC_URL}/`}\n    const specificLabels = Object.keys(specificPaths)\n    return labels.map(label => {\n        if (specificLabels.includes(label)) {\n            return {label: label, path: specificPaths[label]}\n        }\n        return {label: label, path: `${process.env.PUBLIC_URL}/p/${label}/`}\n    })\n})\n\nexport const makeGetNoteByLabel = label => {\n    return createSelector([getState], (state) => state[snakeCase(label)])\n}","import React from 'react'\nimport Select from 'react-select'\nimport {connect} from 'react-redux'\nimport {bindActionCreators} from 'redux'\nimport * as notesSelectors from './selectors'\nimport styled from 'styled-components'\nimport { push } from 'connected-react-router'\nimport { setNote } from \"./actions\";\n\nconst Wrap = styled.div`\n    position: relative;\n    width: 100%;\n\n    .react-autosuggest__container {\n        background-color: red;\n        position: relative;\n    }\n`\n\nconst customStyles = {\n    menu: (provided) => ({\n        ...provided,\n        marginTop: 0,\n    })\n}\n\n\nconst NoteSearch = ({paths, navigate, createNoteFromTerm}) => {\n    const search = React.useRef(null)\n    const options = paths.map(path => ({value: path.path, label: `@${path.label}`}))\n    const [searchInput, setSearchInput] = React.useState('')\n\n    React.useEffect(() => {\n        const callback = (evt) => {\n            if (evt.shiftKey && evt.ctrlKey && evt.key === 'F') {\n                search.current.focus()\n            }\n        }\n        document.addEventListener('keydown', callback)\n        return () => {\n          document.removeEventListener('keydown', callback)\n        }\n      }, [paths])\n\n    const keyDownHandler = (evt) => {\n        if (evt.key === 'Enter') {\n            // determine if the input value is an existing entity\n            const term = evt.target.value\n            const path = paths.find(function(path) {\n                return path.label.includes(term)\n            })\n\n            // if this entity does not match anything, create it\n            if (path === undefined) {\n                evt.preventDefault()\n                createNoteFromTerm(term)\n                navigate(`${process.env.PUBLIC_URL}/p/${term}/`)\n                setSearchInput('')\n                evt.target.blur()\n            }\n        }\n    }\n\n    return (\n        <Wrap>\n            <Select\n                ref={search}\n                inputValue={searchInput}\n                onChange={(option) => navigate(option.value)}\n                options={options}\n                placeholder=\"Jump to a note stub\"\n                styles={customStyles}\n                noOptionsMessage={({inputValue})=>`Press [Enter] to create \"${inputValue}\"`}\n                onKeyDown={keyDownHandler}\n                onInputChange={(e)=>{\n                    console.log(e); setSearchInput(e)}}\n            />\n        </Wrap>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    labels: notesSelectors.getLabels(state),\n    paths: notesSelectors.getPaths(state),\n})\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n    navigate: (label) => push(label),\n    createNoteFromTerm: (label) => setNote({\n        label,\n        content: '',\n        persist: true\n    })\n}, dispatch)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteSearch)","import React from 'react'\nimport { connect } from \"react-redux\";\nimport * as userSelectors from '../auth/selectors'\nimport firebase from 'firebase'\nimport styled from 'styled-components'\nimport {rgba} from 'polished'\nimport NoteSearch from '../notes/note-search'\n\nconst TopBar = styled.div`\n    width: 100%;\n    display: flex;\n    padding: 5px;\n    flex-direction: row;\n`\n\nconst LogoutButton = styled.button`\n    display: flex;\n    align-items: center;\n    border-radius: 3px;\n    border: none;\n    cursor: pointer;\n    margin-left: 4px;\n    padding: 4px;\n    transition: color 80ms, background-color 80ms;\n    color: ${({theme}) => theme.black};\n    background-color: ${({theme}) => rgba(theme.primary, 0)}; \n\n    &:hover,\n    &:focus,\n    &:active {\n        color: white;\n        background-color: ${({theme}) => rgba(theme.primary, 1)};        \n    }\n`\n\nconst Avatar = styled.img`\n    width: 30px;\n    height: 30px;\n    margin-right: 10px;\n    border-radius: 50%;\n`\n\n\nconst UserBar = ({user}) => (\n    <TopBar>\n        <NoteSearch/>\n        {/* <LogoutButton onClick={() => firebase.auth().signOut()}>\n            <Avatar src={user.photoURL}/>\n            <div>Logout</div>\n        </LogoutButton> */}\n    </TopBar>\n)\n\nconst mapStateToProps = (state) => ({\n    user: userSelectors.getUser(state)\n})\n\nexport default connect(mapStateToProps)(UserBar)","\nimport React from 'react'\nimport {Link} from 'react-router-dom'\n\nconst SimpleRender = ({text}) => {\n    const labelRegex = /@\\[?(\\w+)]?/\n    const components = text.split(/(@\\[?\\w+]?\\(?\\w+\\)?)/).map((a: string, i: number) => {\n        if (a.startsWith(\"@\")) {\n            a = `@${a.match(labelRegex)[1]}`\n        }\n        return a.startsWith(\"@\") ? (\n        // @ts-ignore\n        <Link\n            contentEditable={false}\n            to={`${process.env.PUBLIC_URL}/p/` + a.slice(1)}\n            onFocus={e => e.stopPropagation()}\n            key={i}\n        >\n            {a}\n        </Link>\n        ) : (\n        a\n        )\n    }\n    );\n    return components;\n};\n\nexport default SimpleRender","export default {\n  control: {\n    // backgroundColor: '#fff',\n\n    // fontSize: 14,\n    // fontWeight: 'normal',\n  },\n\n  highlighter: {\n    overflow: 'hidden',\n  },\n\n  input: {\n    margin: 0,\n  },\n\n  '&singleLine': {\n    control: {\n      display: 'inline-block',\n\n      width: 130,\n    },\n\n    highlighter: {\n      padding: 1,\n      border: '2px inset transparent',\n    },\n\n    input: {\n      padding: 1,\n\n      border: '2px inset',\n    },\n  },\n\n  '&multiLine': {\n    control: {\n      // fontFamily: 'monospace',\n      // border: '1px solid silver',\n    },\n\n    highlighter: {\n      padding: 9,\n    },\n\n    input: {\n      padding: 0,\n      minHeight: 63,\n      outline: 0,\n      border: 0,\n    },\n  },\n\n  suggestions: {\n    list: {\n      backgroundColor: 'white',\n      border: '1px solid rgba(0,0,0,0.15)',\n      fontSize: 14,\n    },\n\n    item: {\n      padding: '5px 15px',\n      borderBottom: '1px solid rgba(0,0,0,0.15)',\n\n      '&focused': {\n        backgroundColor: '#cee4e5',\n      },\n    },\n  },\n}","import React from 'react'\nimport {bindActionCreators} from 'redux'\nimport {connect} from 'react-redux'\nimport {getSuggestableNotes, makeGetNoteByLabel} from '../notes/selectors'\nimport {setNote} from '../notes/actions'\nimport SimpleRender from './simple-render'\nimport styled from 'styled-components'\nimport { MentionsInput, Mention } from 'react-mentions'\nimport defaultStyles from './defaultStyles'\n\ninterface EditingStyleChangeFunction {\n    editing: boolean\n}\n\nconst Wrap = styled.div`\n    padding: 0 5px;\n    \n    .editor {\n      opacity: 0;\n    }\n    &.editing .editor{\n      opacity: 1;\n    }\n`\n\nconst ContentWrap = styled.div`\n    outline: none;\n    position: relative;\n    width: 100%;\n    font-size: 14px;\n    width: 100%;\n`\n\nconst SaveButton = styled.button`\n  position:absolute;\n  top: 0;\n  right: 0;\n  opacity: 0.5;\n  &:hover,\n  &:focus {\n    opacity: 1;\n  }\n`\n\nconst RenderedContent = styled.div`\n  position: absolute;\n  left: 0;\n  top: 0;\n  right: 0;\n  pointer-events: none;\n  white-space: pre;\n  a {\n    pointer-events: all;\n  }\n`\n\nconst NoteLabel = styled.h2`\n    margin: 10px 0 0 0;\n    font-family: 'Roboto Condensed', sans-serif;\n    font-size: 16px;\n    font-weight: 700;\n`\n\nconst defaultContent = \"Type here...\"\n\n\nconst EditableDiv = ({\n    name,\n    note,\n    suggestions,\n    setContent,\n}) => {\n    const {\n        id = null,\n        content = defaultContent,\n    } = note || {}\n    const [editing, setEditing] = React.useState(false)\n    const [contentState, setContentState] = React.useState(content)\n    const editableDiv = React.useRef(null)\n\n\n    const resetFocus = () => {\n        // noteStart.current.focus()\n    }\n\n    React.useEffect(()=>{\n        setContentState(content)\n    },[content])\n\n    const persistEdit = () => {\n        const newContent = contentState\n        setEditing(false)\n        if (newContent !== content) {\n            setContent(id, newContent)\n        }\n    }\n\n    const handleKeyDown = e => {\n        if (e.key === 'Escape') {\n            setEditing(false)\n            resetFocus()\n            return false\n        }\n        if (e.ctrlKey && e.key === 'Enter') {\n            persistEdit()\n            resetFocus()\n            return false\n        }\n    }\n\n    const handleEditStart = e => {\n        setEditing(true)\n    }\n\n    return (\n        <Wrap className={editing ? 'editing': ''}>\n            <NoteLabel>{name}</NoteLabel>\n            <ContentWrap>\n                <MentionsInput\n                    key={'editable-content'}\n                    value={contentState}\n                    onChange={(e)=>setContentState(e.target.value)}\n                    style={defaultStyles}\n                    onKeyDown={handleKeyDown}\n                    onClick={handleEditStart}\n                    inputRef={editableDiv}\n                    className={'editor'}\n                >\n                  <Mention\n                    trigger=\"@\"\n                    data={suggestions}\n                    displayTransform={(id, display) => `@${display}`}\n                  />\n                </MentionsInput>\n                {!editing && <RenderedContent>\n                    <div\n                        contentEditable\n                        suppressContentEditableWarning={true}\n                        >\n                        <SimpleRender text={content}/>\n                    </div>\n                </RenderedContent>}\n                {editing && <SaveButton onClick={()=>persistEdit()}>Save</SaveButton>}\n            </ContentWrap>\n        </Wrap>\n    );\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    const getContentByLabel = makeGetNoteByLabel(ownProps.name)\n    return {\n        note: getContentByLabel(state),\n        suggestions: getSuggestableNotes(state),\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => bindActionCreators({\n    setContent: (id, content) => setNote({label: ownProps.name, id, content}),\n}, dispatch)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditableDiv)","import EditableDiv from './editable-div'\n\nexport default EditableDiv","export const black = '#212121'\nexport const primary = \"#1976d2\"\nexport const primaryLight = \"#63a4ff\"\nexport const primaryDark = \"#004ba0\"\nexport const highlight = \"#b59e54\"","import {createSelector} from 'reselect'\n\nexport const getState = state => state.userStatus\n\nexport const getUserIds = createSelector([getState], (users) => Object.keys(users))\n\nexport const makeGetUserById = (userId) => createSelector([getState], (users) => users[userId])","import React from \"react\"\nimport { connect } from \"react-redux\";\nimport * as userStatusSelectors from \"../user-status/selectors\"\nimport styled from \"styled-components\";\nimport {Link} from \"react-router-dom\";\nimport {getLocation} from 'connected-react-router'\n\ninterface withSameFlag {\n    samePage: boolean\n}\n\nconst Outer = styled.div<withSameFlag>`\n  opacity: ${({samePage}) => samePage ? 1 : 0.7};\n  transition: opacity 100ms;\n  order: ${({samePage}) => samePage ? -1 : 1};\n  &:hover {\n    opacity: 1;\n  }\n`\n\nconst Label = styled.div`\n  opacity: 0;\n  font-size: 12px;\n  padding: 5px;\n  transition: translate 100ms, opacity 100ms;\n  position:absolute;\n  bottom: calc(100% + 4px);\n  left: 50%;\n  background-color: white;\n  border: 3px solid ${({theme})=>theme.highlight}\n  transform: translate(-50%, 0);\n  pointer-events: none;\n  color: ${({theme})=>theme.black};\n  text-decoration:none;\n  &::before {\n    content: '';\n    position: absolute;\n    left: 50%;\n    top: 100%;\n    width: 5px;\n    height: 5px;\n    background-color: #fff;\n    border: 3px solid ${({theme})=>theme.highlight};\n    border-left: none;\n    border-top: none;\n    transform: translate(-50%, -2px) rotate(45deg);\n  }\n`\n\nconst Wrap = styled.div`\n  display: flex;\n  align-items: center;\n  position: relative;\n  \n  &:hover ${Label}{ \n        opacity: 1;\n  }\n`\n\nconst Avatar = styled.img`\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  overflow: hidden;\n`\n\nconst UserBadge = ({className, user, currentLocation}) => {\n    const samePage = user.location === currentLocation.pathname\n    const label = user.location.replace(/^\\/p\\//, '').replace(/\\/$/, '')\n    return (\n    <Outer className={className} title={user.displayName} samePage={samePage}>\n        <Link to={`${process.env.PUBLIC_URL}${user.location}`}>\n            <Wrap>\n                <Label className='label'>\n                    {label}\n                </Label>\n                <Avatar src={user.avatar}/>\n            </Wrap>\n        </Link>\n    </Outer>\n)}\n\nconst mapStateToProps = (state, ownProps) => {\n    const getUserById = userStatusSelectors.makeGetUserById(ownProps.userId)\n    return {\n        user: getUserById(state),\n        currentLocation: getLocation(state),\n    }\n}\n\nexport default connect(mapStateToProps)(UserBadge)","import React from \"react\"\nimport { connect } from \"react-redux\";\nimport * as userStatusSelectors from \"../user-status/selectors\"\nimport UserBadge from './user-badge'\nimport styled from \"styled-components\";\n\nconst Wrap = styled.div`\n  display: flex;\n  padding: 3px;\n`\n\nconst StyledBadge = styled(UserBadge)`\n  width: 20px;\n  margin-right: 3px;\n`\n\nconst UserStatus = ({className, userIds}) => (\n    <Wrap className={className}>\n        {userIds.map(user => <StyledBadge userId={user} key={user} />)}\n    </Wrap>\n)\n\nconst mapStateToProps = (state) => ({\n    userIds: userStatusSelectors.getUserIds(state)\n})\n\nexport default connect(mapStateToProps)(UserStatus)","import { Provider } from 'react-redux'\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { render } from \"react-dom\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { ConnectedRouter } from 'connected-react-router'\nimport configureStore from './config/configure-store'\nimport history from './utils/history'\nimport firebase from 'firebase';\nimport * as _ from \"lodash\";\nimport { Login } from \"./auth/Login\";\nimport { setUser } from './auth/actions'\nimport ForceAuth from './auth/ForceAuth'\nimport UserBar from './user-bar/user-bar'\nimport styled, {ThemeProvider} from 'styled-components'\nimport EditableDiv from './editable-div'\nimport * as theme from './config/theme'\nimport { createGlobalStyle } from \"styled-components\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAngleDoubleUp } from '@fortawesome/free-solid-svg-icons/faAngleDoubleUp'\nimport { faAngleDoubleDown } from '@fortawesome/free-solid-svg-icons/faAngleDoubleDown'\nimport UserStatus from './user-status/user-status'\n\nimport \"normalize.css\";\n\nconst store = configureStore({}, history)\n\n// Configure Firebase.\nvar firebaseConfig = {\n    apiKey: \"AIzaSyBR2o33lqBdQsoHD4X1uppI93k2fVDeQsw\",\n    authDomain: \"curse-notes.firebaseapp.com\",\n    databaseURL: \"https://curse-notes.firebaseio.com\",\n    projectId: \"curse-notes\",\n    storageBucket: \"curse-notes.appspot.com\",\n    messagingSenderId: \"715608577655\",\n    appId: \"1:715608577655:web:b80968c875c4d3a1601872\"\n  };\nfirebase.initializeApp(firebaseConfig);\nfirebase.auth().onAuthStateChanged( user => store.dispatch(setUser(user)))\n\n\nconst GlobalStyle = createGlobalStyle`\n  @import url(\"https://fonts.googleapis.com/css?family=Roboto|Roboto+Condensed&display=swap\");\n\n  * {\n    box-sizing: border-box;\n  }\n\n  body {\n    background-position: center top;\n    @media (max-width: 799px) {\n      background-image: none !important;    \n    }\n  }\n  \n`\n\nconst Wrap = styled.div`\n  font-family: 'Roboto', sans-serif;\n`\n\nconst NotesBar = styled.div`\n  background-color: #fff;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  \n  @media (min-width: 800px) {\n    min-height: auto;\n    position: fixed;\n    bottom: 0;\n    right: 30px;\n    \n    border-color: ${({theme})=>theme.highlight};\n    border-style: solid;\n    border-width: 3px;\n    border-bottom: 0;\n    border-top-left-radius: 5px;\n    border-top-right-radius: 5px;\n    box-shadow: 0 1px 4px rgba(0, 0, 0, .3);\n    height: 31px;\n    width: 180px;\n      &.open {\n        height: 400px;\n        width: 450px;\n      }\n  } \n`\n\nconst StyledUserStatus = styled(UserStatus)`\n  bottom: 0;\n  right: 0;\n`\n\nconst NotesHeader = styled.div`\n  background-color: ${({theme})=>theme.highlight};\n  font-family: 'Roboto Condensed', sans-serif;\n  color: white;\n  padding: 5px 10px 5px;\n  display: flex;\n  justify-content: space-between;\n  cursor: pointer;\n`\n\nconst NoteContainer = styled.div`\n  flex-grow: 1;\n  flex-shrink: 1;\n`\n\nconst App = () => {\n  const [open, setOpen] = React.useState(true)\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Provider store={store}>\n        <ConnectedRouter history={history}>\n            <Wrap>\n              <GlobalStyle/>\n              <ForceAuth>\n                <NotesBar className={open ? 'open' : ''}>\n                  <NotesHeader onClick={()=>setOpen(!open)}>Road to Redemption<FontAwesomeIcon icon={open ? faAngleDoubleDown: faAngleDoubleUp} /></NotesHeader>\n                  <UserBar/>\n                    <NoteContainer>\n                        <Route exact={true} path={`${process.env.PUBLIC_URL}/`} component={Home} />\n                        <Route path={`${process.env.PUBLIC_URL}/p/:pageId`} component={Page} />\n                    </NoteContainer>\n                  <StyledUserStatus/>\n                </NotesBar>\n              </ForceAuth>\n            </Wrap>\n        </ConnectedRouter>\n      </Provider>\n    </ThemeProvider>\n  )\n};\n\nconst Home = ({ match }) => <EditableDiv name=\"home\"/>\n\nconst Page = ({ match }) => <EditableDiv name={match.params.pageId}/>;\n\nconst rootElement = document.getElementById(\"root\");\nrender(<App />, rootElement);\n","/**\n * Combine all reducers in this file and export the combined reducers.\n */\n\nimport { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\n\nimport history from '../utils/history';\nimport auth from '../auth/reducer'\nimport notes from '../notes/reducer'\nimport userStatus from '../user-status/reducer'\n\n/**\n * Merges the main reducer with the router state and dynamically injected reducers\n */\nexport default function createReducer(injectedReducers = {}) {\n  const rootReducer = combineReducers({\n    router: connectRouter(history),\n    auth,\n    notes,\n    userStatus,\n    ...injectedReducers,\n  });\n\n  return rootReducer;\n}","import * as types from \"./action-types\";\n\nexport function setUser(user: object) {\n    return {\n        type: types.SET_USER,\n        payload: {\n            user,\n        }\n    }\n}"],"sourceRoot":""}