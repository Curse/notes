{"version":3,"sources":["utils/history.tsx","auth/action-types.tsx","auth/reducer.js","notes/action-types.tsx","notes/reducer.tsx","auth/selectors.tsx","notes/actions.tsx","notes/saga.tsx","config/root-saga.tsx","config/configure-store.tsx","auth/Login.tsx","auth/ForceAuth.tsx","notes/selectors.tsx","notes/note-search.tsx","user-bar/user-bar.tsx","editable-div/simple-render.tsx","editable-div/editable-div.tsx","editable-div/index.tsx","config/theme.tsx","index.tsx","config/root-reducer.tsx","auth/actions.tsx"],"names":["history","createBrowserHistory","SET_USER","initialState","user","authReducer","state","arguments","length","undefined","action","type","types","Object","objectSpread","payload","SET_NOTE","START_SYNC","STOP_SYNC","home","this","notesReducer","_ref","id","label","content","defineProperty","snakeCase","handleSetNote","getUser","createSelector","auth","setNote","_ref$id","_ref$persist","persist","createFirebaseChannel","listenForNotes","persistNote","sagaFilter","notesSaga","concat","toConsumableArray","values","notesTypes","authTypes","database","regenerator_default","a","wrap","_context","prev","next","firebase","firestore","abrupt","eventChannel","emiter","listener","collection","where","uid","onSnapshot","snapshot","docChanges","forEach","change","doc","data","off","stop","_marked","firebaseChannel","_context2","select","authSelectors","sent","call","take","put","actions","t0","console","log","_marked2","_ref2","_context3","add","owner","get","then","docSnapshot","ref","update","_marked3","_ref3","currentSync","_context4","fork","cancel","_marked4","_context5","takeEvery","_marked5","rootSaga","sagas","all","map","saga","spawn","mark","_callee","root_saga_marked","sagaMiddleware","createSagaMiddleware","uiConfig","signInFlow","signInOptions","GoogleAuthProvider","PROVIDER_ID","callbacks","signInSuccessWithAuthResult","Wrap","styled","div","_templateObject","theme","primaryDark","LoginWindow","_templateObject2","Login","props","react_default","createElement","StyledFirebaseAuth_default","firebaseAuth","connect","selectors","children","auth_Login","getState","notes","getLabels","keys","sort","getPaths","labels","specificPaths","specificLabels","includes","path","note_search_templateObject","customStyles","menu","provided","marginTop","notesSelectors","paths","dispatch","bindActionCreators","navigate","push","search","React","useRef","options","value","useEffect","callback","evt","shiftKey","ctrlKey","key","current","focus","document","addEventListener","removeEventListener","note_search_Wrap","react_select_browser_esm","onChange","option","className","placeholder","styles","TopBar","user_bar_templateObject","LogoutButton","button","user_bar_templateObject2","black","rgba","primary","Avatar","img","_templateObject3","userSelectors","_ref4","note_search","onClick","signOut","src","photoURL","SimpleRender","text","split","i","startsWith","react_router_dom","contentEditable","to","slice","onFocus","e","stopPropagation","editable_div_templateObject","Text","editable_div_templateObject2","EditableDiv","ownProps","note","name","setContent","_ref2$id","_ref2$content","_React$useState","useState","_React$useState2","slicedToArray","editing","setEditing","noteStart","editableDiv","resetFocus","handler","event","target","persistEdit","newContent","innerText","editable_div_Wrap","tabIndex","onBlur","onKeyDown","onKeyUp","innerHTML","suppressContentEditableWarning","simple_render","primaryLight","store","middlewares","routerMiddleware","enhancers","applyMiddleware","apply","composeEnhancers","compose","createStore","injectedReducers","combineReducers","router","connectRouter","createReducer","run","configureStore","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","onAuthStateChanged","setUser","GlobalStyle","createGlobalStyle","src_templateObject","src_templateObject2","Home","match","src_editable_div","Page","params","pageId","rootElement","getElementById","render","styled_components_browser_esm","es","src_Wrap","auth_ForceAuth","user_bar","esm","react_router","exact","component"],"mappings":"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","file":"static/js/main.33ea2065.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory();\nexport default history;","export const SET_USER = 'auth:SET_USER'","import * as types from './action-types'\n\nconst initialState = {\n    user: null\n}\n\nfunction authReducer(state = initialState, action) {\n    switch (action.type) {\n        case types.SET_USER: {\n            return {\n                ...state,\n                user: action.payload.user,\n            }\n        }\n        default: {\n            return state\n        }\n    }\n}\n\nexport default authReducer","export const SET_NOTE = 'notes:SET_NOTE'\nexport const START_SYNC = 'notes:START_SYNC'\nexport const STOP_SYNC = 'notes:STOP_SYNC'","import * as types from './action-types'\nimport snakeCase from 'lodash/snakeCase'\n\nconst initialState = {\n    home: `This is a simple note taking app.\n\n    Prepend any world with @ to create a new page, like @this.\n\n    The entire page is editable, apart from the Home link at the top.`,\n    this: `Isn't this easy?`\n};\n\nfunction handleSetNote(state, {id, label, content}) {\n    return {\n        ...state,\n        [snakeCase(label)]: {id, content},\n    }\n}\n\n\nfunction notesReducer(state = initialState, action) {\n    switch (action.type) {\n        case (types.SET_NOTE): {\n            return handleSetNote(state, action.payload)\n        }\n        default: {\n            return state;\n        }\n    }\n}\n\n  export default notesReducer","import { createSelector } from 'reselect'\n\nexport const getState = state => state.auth\nexport const getUser = createSelector([getState], (state) => state.user )\n","import * as types from './action-types'\n\nexport const setNote = ({label, content, id=null, persist=true}) => ({\n    type: types.SET_NOTE,\n    payload: {\n        id, label, content, persist\n    }\n})","import {eventChannel} from 'redux-saga'\nimport {take, put, call, select, takeEvery, fork, cancel} from 'redux-saga/effects'\nimport firebase from 'firebase'\nimport * as authSelectors from '../auth/selectors'\nimport * as notesTypes from './action-types'\nimport * as authTypes from '../auth/action-types'\nimport * as actions from './actions'\n\nconst types = [...Object.values(notesTypes), authTypes.SET_USER]\n\nfunction* createFirebaseChannel(user) {\n    const database = firebase.firestore()\n\n    return eventChannel(emiter => {\n        const listener = database.collection(\"notes\").where('owner', '==', user.uid).onSnapshot(snapshot => {\n          snapshot.docChanges().forEach(change => emiter({id: change.doc.id, data: change.doc.data()}))\n        })\n  \n        return () => {\n          //@ts-ignore\n          listener.off();\n        }\n    })\n}\n\nfunction* listenForNotes() {\n    const user = yield select(authSelectors.getUser)\n    if (!user) {\n        return\n    }\n    const firebaseChannel = yield call(createFirebaseChannel, user) \n\n    while (true) {\n        try {\n            const { id, data } = yield take(firebaseChannel);\n            yield put(actions.setNote({id, ...data, persist: false}));\n        } catch(err) {\n            console.log('firebase error', err)\n        }\n    }\n}\n\nfunction* persistNote({id, label, content}) {\n    const user = yield select(authSelectors.getUser)\n    if (!user) {\n        return\n    }\n    const database = firebase.firestore()\n    if (!id) {\n        yield database.collection(\"notes\").add({\n            owner: user.uid,\n            label,\n            content,\n        })\n    } else {\n        database.collection('notes').doc(id).get().then(docSnapshot => {\n            docSnapshot.ref.update({label, content})\n        })\n    }\n    \n}\n\nfunction* sagaFilter({type, payload}) {\n    switch (type) {\n        case authTypes.SET_USER:\n            const currentSync = yield fork(listenForNotes)\n            yield take(notesTypes.STOP_SYNC)\n            yield cancel(currentSync)\n            break\n        case notesTypes.SET_NOTE:\n            if (payload.persist) {\n                yield call(persistNote, payload)\n            }\n            break\n    }\n  }\n  \n\nexport default function* notesSaga() {\n    yield takeEvery(types, sagaFilter)\n}","import {spawn, call, all} from 'redux-saga/effects'\nimport notesSaga from '../notes/saga'\n\nexport default function* rootSaga () {\n    const sagas = [\n        notesSaga,\n    ];\n  \n    yield all(sagas.map(saga =>\n      spawn(function* () {\n        while (true) {\n          try {\n            yield call(saga)\n            break\n          } catch (e) {\n            console.log(e)\n          }\n        }\n      }))\n    );\n  }","/**\n * Create the store with dynamic reducers\n */\n\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { routerMiddleware } from 'connected-react-router';\nimport createSagaMiddleware from 'redux-saga';\nimport createReducer from './root-reducer';\nimport rootSaga from './root-saga'\n\nconst sagaMiddleware = createSagaMiddleware();\n\nexport default function configureStore(initialState = {}, history) {\n  // Create the store with two middlewares\n  // 2. routerMiddleware: Syncs the location/URL path to the state\n  const middlewares = [sagaMiddleware, routerMiddleware(history)];\n\n  const enhancers = [applyMiddleware(...middlewares)];\n\n  // If Redux DevTools Extension is installed use it, otherwise use Redux compose\n  /* eslint-disable no-underscore-dangle */\n  // @ts-ignore\n  const composeEnhancers = process.env.NODE_ENV !== 'production' && typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    // @ts-ignore\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({ \n      // TODO Try to remove when `react-router-redux` is out of beta, LOCATION_CHANGE should not be fired more than once after hot reloading\n      // Prevent recomputing reducers for `replaceReducer`\n      shouldHotReload: false\n    })\n    : compose;\n  /* eslint-enable */\n\n  const store = createStore(createReducer(), initialState, composeEnhancers(...enhancers));\n  sagaMiddleware.run(rootSaga)\n\n  // Extensions\n  // @ts-ignore\n  // store.injectedReducers = {}; // Reducer registry\n  // store.injectedSagas = {}; // Saga registry\n\n  // /* istanbul ignore next */\n  // if (module.hot) {\n  //   module.hot.accept('./reducers', () => {\n  //     store.replaceReducer(createReducer(store.injectedReducers));\n  //     store.dispatch({ type: '@@REDUCER_INJECTED' });\n  //   });\n  // }\n\n  return store;\n}","import React from \"react\";\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport firebase from 'firebase';\nimport styled from 'styled-components'\n\n// Configure FirebaseUI.\nexport const uiConfig = {\n  // Popup signin flow rather than redirect flow.\n  signInFlow: 'popup',\n  // Redirect to /signedIn after sign in is successful. Alternatively you can provide a callbacks.signInSuccess function.\n  // signInSuccessUrl: '/signedIn',\n  // We will display Google and Facebook as auth providers.\n  signInOptions: [\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n    // firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n    // firebase.auth.TwitterAuthProvider.PROVIDER_ID,\n    // firebase.auth.GithubAuthProvider.PROVIDER_ID,\n  ],\n  callbacks: {\n    signInSuccessWithAuthResult: () => false\n  }\n};\n\nconst Wrap = styled.div`\n  width: 100%;\n  min-height: 100vh;\n  background-color: ${({theme})=> theme.primaryDark};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst LoginWindow = styled.div`\n  width: 100%;\n  max-width: 400px;\n  margin-left: 10px;\n  margin-right: 10px;\n  background-color: white;\n  border-radius: 4px;\n  padding: 10px;\n`\n\nexport function Login(props: any) {\n  return (\n  <Wrap>\n    <LoginWindow>\n      <h1>Notes App</h1>\n      <p>Please sign-in:</p>\n      <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()} />\n    </LoginWindow>\n  </Wrap>);\n}\n\nexport default Login","import React from 'react'\nimport {connect} from 'react-redux'\nimport Login from './Login'\nimport * as selectors from './selectors'\n\nconst ForceAuth = ({user, children}) => {\n    if (user) {\n        return children\n    }\n    return <Login/>\n}\n\nconst mapStateToProps = (state) => ({\n    user: selectors.getUser(state)\n})\n\nexport default connect(mapStateToProps)(ForceAuth)","import {createSelector} from 'reselect'\nimport snakeCase from 'lodash/snakeCase'\n\nexport const getState = state => state.notes\n\nexport const getLabels = createSelector([getState], state => Object.keys(state).sort())\n\nexport const getPaths = createSelector([getLabels], labels => {\n    const specificPaths = {'home': '/notes/'}\n    const specificLabels = Object.keys(specificPaths)\n    return labels.map(label => {\n        if (specificLabels.includes(label)) {\n            return {label: label, path: specificPaths[label]}\n        }\n        return {label: label, path: `/notes/p/${label}/`}\n    })\n})\n\nexport const makeGetNoteByLabel = label => {\n    return createSelector([getState], (state) => state[snakeCase(label)])\n}","import React from 'react'\nimport Select from 'react-select'\nimport {connect} from 'react-redux'\nimport {bindActionCreators} from 'redux'\nimport * as notesSelectors from './selectors'\nimport styled from 'styled-components'\nimport { push } from 'connected-react-router'\n\nconst Wrap = styled.div`\n    position: relative;\n    width: 100%;\n    height: 24px;\n\n    .react-autosuggest__container {\n        background-color: red;\n        position: relative;\n    }\n`\n\nconst customStyles = {\n    menu: (provided) => ({\n        ...provided,\n        marginTop: 0,\n    })\n}\n\n\nconst NoteSearch = ({paths, navigate}) => {\n    const search = React.useRef(null)\n    const options = paths.map(path => ({value: path.path, label: `@${path.label}`}))\n\n    React.useEffect(() => {\n        const callback = (evt) => {\n          if (evt.shiftKey && evt.ctrlKey && evt.key === 'F') {\n            search.current.focus()\n          }\n        }\n        document.addEventListener('keydown', callback)\n        return () => {\n          document.removeEventListener('keydown', callback)\n        }\n      }, [])\n\n    return (\n        <Wrap>\n            <Select\n                ref={search}\n                value=''\n                onChange={(option) => navigate(option.value)} \n                options={options}\n                className=\"bbbababb\"\n                placeholder=\"Jump to a note stub\"\n                styles={customStyles}\n            />\n        </Wrap>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    labels: notesSelectors.getLabels(state),\n    paths: notesSelectors.getPaths(state),\n})\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n    navigate: (label) => push(label)\n}, dispatch)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteSearch)","import React from 'react'\nimport { connect } from \"react-redux\";\nimport * as userSelectors from '../auth/selectors'\nimport firebase from 'firebase'\nimport styled from 'styled-components'\nimport {rgba} from 'polished'\nimport NoteSearch from '../notes/note-search'\n\nconst TopBar = styled.div`\n    width: 100%;\n    display: flex;\n    padding: 5px;\n    flex-direction: row;\n`\n\nconst LogoutButton = styled.button`\n    display: flex;\n    align-items: center;\n    border-radius: 3px;\n    border: none;\n    cursor: pointer;\n    margin-left: 4px;\n    padding: 4px;\n    transition: color 80ms, background-color 80ms;\n    color: ${({theme}) => theme.black};\n    background-color: ${({theme}) => rgba(theme.primary, 0)}; \n\n    &:hover,\n    &:focus,\n    &:active {\n        color: white;\n        background-color: ${({theme}) => rgba(theme.primary, 1)};        \n    }\n`\n\nconst Avatar = styled.img`\n    width: 30px;\n    height: 30px;\n    margin-right: 10px;\n    border-radius: 50%;\n`\n\n\nconst UserBar = ({user}) => (\n    <TopBar>\n        <NoteSearch/>\n        <LogoutButton onClick={() => firebase.auth().signOut()}>\n            <Avatar src={user.photoURL}/>\n            <div>Logout</div>\n        </LogoutButton>\n    </TopBar>\n)\n\nconst mapStateToProps = (state) => ({\n    user: userSelectors.getUser(state)\n})\n\nexport default connect(mapStateToProps)(UserBar)","\nimport React from 'react'\nimport {Link} from 'react-router-dom'\n\nconst SimpleRender = ({text}) => {\n    const components = text.split(/(@\\w+)/).map((a: string, i: number) =>\n        a.startsWith(\"@\") ? (\n        // @ts-ignore\n        <Link\n            contentEditable={false}\n            to={\"/notes/p/\" + a.slice(1)}\n            onFocus={e => e.stopPropagation()}\n            key={i}\n        >\n            {a}\n        </Link>\n        ) : (\n        a\n        )\n    );\n    return components;\n};\n\nexport default SimpleRender","import React from 'react'\nimport {bindActionCreators} from 'redux'\nimport {connect} from 'react-redux'\nimport {makeGetNoteByLabel} from '../notes/selectors'\nimport {setNote} from '../notes/actions'\nimport SimpleRender from './simple-render'\nimport styled from 'styled-components'\n\nconst Wrap = styled.div`\n    outline: none;\n    width: 100%;\n`\n\nconst Text = styled.div`\n    outline: none;\n    display: inline-block;\n    width: 100%;\n    white-space: pre-wrap;\n    word-break: break-word;\n    caret-color: rgba(0,0,0,0/9);\n    padding: 3px 2px;\n    min-height: 1em;\n    color: rgba(0,0,0,0.9);\n`\n\nconst defaultContent = \"Type here...\"\n\nconst EditableDiv = ({\n    name,\n    note,\n    setContent,\n}) => {\n    const {\n        id = null,\n        content = defaultContent,\n    } = note || {}\n    const [editing, setEditing] = React.useState(false)\n    const noteStart = React.useRef(null)\n    const editableDiv = React.useRef(null)\n\n    const resetFocus = () => {\n        noteStart.current.focus()\n    }\n\n    React.useEffect(()=>{\n        if (!editing){\n            return\n        }\n        const handler = (event) => {\n            if (event.target !== editableDiv.current) {\n                resetFocus()\n            }\n        }\n        document.addEventListener('click', handler)\n        return () => document.removeEventListener('click', handler)\n    },[editing])\n\n    const persistEdit = () => {\n        const newContent = editableDiv.current.innerText\n        setEditing(false)\n        if (newContent !== content) {\n            setContent(id, newContent)\n        }\n    }\n\n    const handleBlur = e => {\n        persistEdit()\n    };\n\n    const handleKeyDown = e => {\n        if (e.key === 'Escape') {\n            setEditing(false)\n            resetFocus()\n            return false\n        }\n        if (e.ctrlKey && e.key === 'Enter') {\n            persistEdit()\n            resetFocus()\n            return false\n        }\n    }\n\n    return (\n        <Wrap ref={noteStart} tabIndex={0}>\n            <Text\n                id={name}\n                ref={editableDiv}\n                contentEditable\n                onFocus={e => setEditing(true)}\n                onBlur={handleBlur}\n                onKeyDown={handleKeyDown}\n                onKeyUp={()=>console.log(editableDiv.current.innerHTML)}\n                suppressContentEditableWarning={true}\n            >\n            {editing\n                ? content\n                : <SimpleRender text={content}/>}\n            </Text>\n        </Wrap>\n    );\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    const getContentByLabel = makeGetNoteByLabel(ownProps.name)\n    return {\n        note: getContentByLabel(state),\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => bindActionCreators({\n    setContent: (id, content) => setNote({label: ownProps.name, id, content}),\n}, dispatch)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditableDiv)","import EditableDiv from './editable-div'\n\nexport default EditableDiv","export const black = '#212121'\nexport const primary = \"#1976d2\"\nexport const primaryLight = \"#63a4ff\"\nexport const primaryDark = \"#004ba0\"","import { Provider } from 'react-redux'\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { render } from \"react-dom\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { ConnectedRouter } from 'connected-react-router'\nimport configureStore from './config/configure-store'\nimport history from './utils/history'\nimport firebase from 'firebase';\nimport * as _ from \"lodash\";\nimport { Login } from \"./auth/Login\";\nimport { setUser } from './auth/actions'\nimport ForceAuth from './auth/ForceAuth'\nimport UserBar from './user-bar/user-bar'\nimport styled, {ThemeProvider} from 'styled-components'\nimport EditableDiv from './editable-div'\nimport * as theme from './config/theme'\nimport { createGlobalStyle } from \"styled-components\"\n\nimport \"normalize.css\";\n\nconst store = configureStore({}, history)\n\n// Configure Firebase.\nvar firebaseConfig = {\n    apiKey: \"AIzaSyBR2o33lqBdQsoHD4X1uppI93k2fVDeQsw\",\n    authDomain: \"curse-notes.firebaseapp.com\",\n    databaseURL: \"https://curse-notes.firebaseio.com\",\n    projectId: \"curse-notes\",\n    storageBucket: \"curse-notes.appspot.com\",\n    messagingSenderId: \"715608577655\",\n    appId: \"1:715608577655:web:b80968c875c4d3a1601872\"\n  };\nfirebase.initializeApp(firebaseConfig);\nfirebase.auth().onAuthStateChanged( user => store.dispatch(setUser(user)))\n\n\nconst GlobalStyle = createGlobalStyle`\n  @import url(\"https://fonts.googleapis.com/css?family=Lato&display=swap\");\n\n  * {\n    box-sizing: border-box;\n  }\n`\n\nconst Wrap = styled.div`\n  font-family: \"Lato\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Helvetica,\n    \"Apple Color Emoji\", Arial, sans-serif, \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n`\n\nconst App = () => (\n  <ThemeProvider theme={theme}>\n    <Provider store={store}>\n      <Wrap>\n        <GlobalStyle/>\n        <ForceAuth>\n          <UserBar/>\n          <ConnectedRouter history={history}>\n            <Route exact={true} path=\"/notes/\" component={Home} />\n            <Route path=\"/notes/p/:pageId\" component={Page} />\n          </ConnectedRouter>\n        </ForceAuth>\n      </Wrap>\n    </Provider>\n  </ThemeProvider>\n);\n\nconst Home = ({ match }) => <EditableDiv name=\"home\"/>\n\nconst Page = ({ match }) => <EditableDiv name={match.params.pageId}/>;\n\nconst rootElement = document.getElementById(\"root\");\nrender(<App />, rootElement);\n","/**\n * Combine all reducers in this file and export the combined reducers.\n */\n\nimport { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\n\nimport history from '../utils/history';\nimport auth from '../auth/reducer'\nimport notes from '../notes/reducer'\n\n/**\n * Merges the main reducer with the router state and dynamically injected reducers\n */\nexport default function createReducer(injectedReducers = {}) {\n  const rootReducer = combineReducers({\n    router: connectRouter(history),\n    auth,\n    notes,\n    ...injectedReducers,\n  });\n\n  return rootReducer;\n}","import * as types from \"./action-types\";\n\nexport function setUser(user: object) {\n    return {\n        type: types.SET_USER,\n        payload: {\n            user,\n        }\n    }\n}"],"sourceRoot":""}